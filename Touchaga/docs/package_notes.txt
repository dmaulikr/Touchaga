the level controls everything.

On start the level creates a player object, a layer object, and loads the level data.  It keeps a reference around to all these objects.  A frame counter starts and every frame, update() is called on everything but player.  Every clock tick the level will check the level data for new events.  Which as of now are the following types, create enemy, have enemy shoot, create hazard, move.  The level also contains the layer.  Whenever a new object is added, the level lets the layer know about it.  The enemy bullets, enemies, and hazards ask the Level for the player's position.  


collided?-collided from player to enemies, enemy bullets, and hazards
collided?-collided from player bullets to enemies
create playerBullet(pos) from player to playerBullet
create enemyBullet from enemy to enemyBullet

the layer needs a copy off all on screen sprites, it needs to be alerted when the objects are destroyed as well



Create interface, collision with player, getBoundingBox and collided methods



OK!!!!
Main Game Loop instantiated.
Main Game Loop instantiates Layer.
Main Game Loop instantiates Player.
Main Game Loop instantiates Level.

The layer also has a reference to everything.

Player needs to listen to control events.

Every clock tick Main Game Loop sends the time to the level and asks for two things.
Level has two different interfaces.
New enemies or hazards that return an object which then get passed to the layer.
Then an interface where a ID (or enemy object itself) is passed in to the level.
this will either pass back the next action or enact it on the enemy itself.

Main Game Loop can check for collisions.


Players and enemies need to create bullets that get added to layer and also need to make collision checks.





Main Game Loop
-- Keeps track of all onscreen object, also forwards them to layer
- Do everything BUT move player (because the TouchDelegate goes on the sprite)
- Check for shoot
- Player Shoot (returns player bullet object) - forwards to layer
- Level Update (follows different interfaces)


-- Checks for new creation, creates and returns for addition to main game loop and layer
-- Then passes in each enemy, it will check if there are any updated movement for that enemy and make that move
--- WHAT ABOUT SHOOTING AND CREATING NEW ENEMY BULLETS

OR

-- Could do everything and the function returns all newly instantiated objects.

- Check for collisions






Every clock tick.
Layer 


Creates a new Level.

Level has two different types, creation events that create a new enemy or hazard, these happen no matter what.
Every tick, layer loops through enemies and hazards and passes the IDs to the level.  the level will return any packaged commands for them to run.

